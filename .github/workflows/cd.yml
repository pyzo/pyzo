name: CD

on:
  workflow_dispatch:
  push:
    tags: [ 'v*' ]
    branches: [ cd ]

jobs:

  win-amd_64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -U pyside6 pyinstaller
          choco install innosetup --version=5.6.1
    - name: Freeze
      run: |
          cd freeze
          python pyzo_freeze.py
          python pyzo_package.py
    - name: Test frozen
      run: |
          python pyzo_test_frozen.py
    - name: Upload distributions
      uses: actions/upload-artifact@v2
      with:
        path: |
          dist/*.exe
          dist/*.zip
        name: dist

  publish:
    name: Publish binaries to Github
    runs-on: ubuntu-latest
    needs: [ win-amd_64 ]
    if: success() && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Download assets
      uses: actions/download-artifact@v1.0.0
      with:
        name: dist
    - name: Get version from git ref
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Create GH release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
            Autogenerated binary wheels that include wgpu-native.
            See [the changelog](https://github.com/pygfx/wgpu-py/blob/main/CHANGELOG.md) for details.
        draft: false
        prerelease: false
    - name: Upload release assets
      # Move back to official action after fix https://github.com/actions/upload-release-asset/issues/4
      uses: AButler/upload-release-assets@v2.0
      with:
        release-tag: ${{ steps.get_version.outputs.VERSION }}
        files: 'dist/*.zip;dist/*.tar.gz;dist/*.dmg;dist/*.exe;dist/*.msi'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
